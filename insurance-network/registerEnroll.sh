#!/bin/bash

function createinsurer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/insurer.insurance.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/insurer.insurance.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7056 --caname ca-insurer --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7056-ca-insurer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7056-ca-insurer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7056-ca-insurer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7056-ca-insurer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/insurer.insurance.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy insurer's CA cert to insurer's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/insurer.insurance.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/insurer.insurance.com/msp/tlscacerts/ca.crt"

  # Copy insurer's CA cert to insurer's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/insurer.insurance.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/insurer.insurance.com/tlsca/tlsca.insurer.insurance.com-cert.pem"

  # Copy insurer's CA cert to insurer's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/insurer.insurance.com/ca"
  cp "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/insurer.insurance.com/ca/ca.insurer.insurance.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-insurer --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-insurer --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-insurer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-insurer --id.name insureradmin --id.secret insureradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7056 --caname ca-insurer -M "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7056 --caname ca-insurer -M "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/tls" --enrollment.profile tls --csr.hosts peer0.insurer.insurance.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer0.insurer.insurance.com/tls/server.key"

  ##new
  echo "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7056 --caname ca-insurer -M "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/msp/config.yaml"

  echo "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7056 --caname ca-insurer -M "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/tls" --enrollment.profile tls --csr.hosts peer1.insurer.insurance.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/insurer.insurance.com/peers/peer1.insurer.insurance.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7056 --caname ca-insurer -M "${PWD}/organizations/peerOrganizations/insurer.insurance.com/users/User1@insurer.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/insurer.insurance.com/users/User1@insurer.insurance.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://insureradmin:insureradminpw@localhost:7056 --caname ca-insurer -M "${PWD}/organizations/peerOrganizations/insurer.insurance.com/users/Admin@insurer.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/insurer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/insurer.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/insurer.insurance.com/users/Admin@insurer.insurance.com/msp/config.yaml"
}

function createhealthcareProvider() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/healthcareProvider.insurance.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-healthcareProvider --tls.certfiles "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-healthcareProvider.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-healthcareProvider.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-healthcareProvider.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-healthcareProvider.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy healthcareProvider's CA cert to healthcareProvider's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem" "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/msp/tlscacerts/ca.crt"

  # Copy healthcareProvider's CA cert to healthcareProvider's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem" "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/tlsca/tlsca.healthcareProvider.insurance.com-cert.pem"

  # Copy healthcareProvider's CA cert to healthcareProvider's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/ca"
  cp "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem" "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/ca/ca.healthcareProvider.insurance.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-healthcareProvider --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-healthcareProvider --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-healthcareProvider --id.name healthcareProvideradmin --id.secret healthcareProvideradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-healthcareProvider -M "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-healthcareProvider -M "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/tls" --enrollment.profile tls --csr.hosts peer0.healthcareProvider.insurance.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/peers/peer0.healthcareProvider.insurance.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-healthcareProvider -M "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/users/User1@healthcareProvider.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/users/User1@healthcareProvider.insurance.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://healthcareProvideradmin:healthcareProvideradminpw@localhost:7054 --caname ca-healthcareProvider -M "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/users/Admin@healthcareProvider.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/healthcareProvider/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/healthcareProvider.insurance.com/users/Admin@healthcareProvider.insurance.com/msp/config.yaml"
}

function createTPA() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/TPA.insurance.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/TPA.insurance.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-TPA --tls.certfiles "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-TPA.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-TPA.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-TPA.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-TPA.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/TPA.insurance.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy TPA's CA cert to TPA's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/TPA.insurance.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem" "${PWD}/organizations/peerOrganizations/TPA.insurance.com/msp/tlscacerts/ca.crt"

  # Copy TPA's CA cert to TPA's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/TPA.insurance.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem" "${PWD}/organizations/peerOrganizations/TPA.insurance.com/tlsca/tlsca.TPA.insurance.com-cert.pem"

  # Copy TPA's CA cert to TPA's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/TPA.insurance.com/ca"
  cp "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem" "${PWD}/organizations/peerOrganizations/TPA.insurance.com/ca/ca.TPA.insurance.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-TPA --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-TPA --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-TPA --id.name TPAadmin --id.secret TPAadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-TPA -M "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/TPA.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-TPA -M "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/tls" --enrollment.profile tls --csr.hosts peer0.TPA.insurance.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/TPA.insurance.com/peers/peer0.TPA.insurance.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-TPA -M "${PWD}/organizations/peerOrganizations/TPA.insurance.com/users/User1@TPA.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/TPA.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/TPA.insurance.com/users/User1@TPA.insurance.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://TPAadmin:TPAadminpw@localhost:8054 --caname ca-TPA -M "${PWD}/organizations/peerOrganizations/TPA.insurance.com/users/Admin@TPA.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/TPA/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/TPA.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/TPA.insurance.com/users/Admin@TPA.insurance.com/msp/config.yaml"
}

#new start
function createregulatoryAuthority() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/regulatoryAuthority.insurance.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8055 --caname ca-regulatoryAuthority --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8055-ca-regulatoryAuthority.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8055-ca-regulatoryAuthority.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8055-ca-regulatoryAuthority.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8055-ca-regulatoryAuthority.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy regulatoryAuthority's CA cert to regulatoryAuthority's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/msp/tlscacerts/ca.crt"

  # Copy regulatoryAuthority's CA cert to regulatoryAuthority's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/tlsca/tlsca.regulatoryAuthority.insurance.com-cert.pem"

  # Copy regulatoryAuthority's CA cert to regulatoryAuthority's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/ca"
  cp "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/ca/ca.regulatoryAuthority.insurance.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-regulatoryAuthority --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-regulatoryAuthority --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-regulatoryAuthority --id.name regulatoryAuthorityadmin --id.secret regulatoryAuthorityadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8055 --caname ca-regulatoryAuthority -M "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8055 --caname ca-regulatoryAuthority -M "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/tls" --enrollment.profile tls --csr.hosts peer0.regulatoryAuthority.insurance.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/peers/peer0.regulatoryAuthority.insurance.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8055 --caname ca-regulatoryAuthority -M "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/users/User1@regulatoryAuthority.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/users/User1@regulatoryAuthority.insurance.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://regulatoryAuthorityadmin:regulatoryAuthorityadminpw@localhost:8055 --caname ca-regulatoryAuthority -M "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/users/Admin@regulatoryAuthority.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulatoryAuthority/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulatoryAuthority.insurance.com/users/Admin@regulatoryAuthority.insurance.com/msp/config.yaml"
}
#new end

function createOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/insurance.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/insurance.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/insurance.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/insurance.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/insurance.com/msp/tlscacerts/tlsca.insurance.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/insurance.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/insurance.com/tlsca/tlsca.insurance.com-cert.pem"

  echo "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/insurance.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/msp/config.yaml"

  echo "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/tls" --enrollment.profile tls --csr.hosts orderer.insurance.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/insurance.com/orderers/orderer.insurance.com/msp/tlscacerts/tlsca.insurance.com-cert.pem"

  echo "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/insurance.com/users/Admin@insurance.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/insurance.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/insurance.com/users/Admin@insurance.com/msp/config.yaml"
}

createinsurer
createhealthcareProvider
createTPA
createregulatoryAuthority
createOrderer